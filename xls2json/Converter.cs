using System.Data;
using System.Text.Json;
using System.Text.Json.Nodes;
using Excel;

namespace xls2json;

public class Converter
{
    private string ExcelPath;
    private string JsonPath;
    private Log Log => _xls2Json.Log;
    private xls2json _xls2Json;
    

    public Converter(xls2json xls2Json)
    {
        _xls2Json = xls2Json;
    }
    
    private void LoadExcel(string excelPath)
    {
        if (!File.Exists(excelPath))
        {
            global::xls2json.Log.Error($"文件不存在 {excelPath}");
            return;
        }
        global::xls2json.Log.Info($"加载文件 {excelPath}");
        using var fs = File.Open(excelPath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
        IExcelDataReader excelDataReader;
        if(excelPath.EndsWith(".xls"))
        {
            excelDataReader = ExcelReaderFactory.CreateBinaryReader(fs);
        }
        else
        {
            excelDataReader = ExcelReaderFactory.CreateOpenXmlReader(fs);
        }
        var result = excelDataReader.AsDataSet();
        if(result == null)
        {
            global::xls2json.Log.Error($"文件读取失败 {excelPath} : {excelDataReader.ExceptionMessage}");
            return;
        }
        
        foreach (DataTable table in result.Tables)
        {
            LoadSheet(excelPath,table);
        }
        
        global::xls2json.Log.Succese("文件处理完成");
        fs.Close();
    }
    
    private void LoadSheet(string filePath, DataTable table)
    {
        var jsonObject = new JsonObject();
        var options = new JsonSerializerOptions { WriteIndented = true };
        global::xls2json.Log.Info("处理表格:" + table.TableName);
        //jsonObject["Meta"] = GetFileHead(filePath, table.TableName);

        
        int keyIndex = FindTagIndex("key", table);
        if(keyIndex == -1)
        {
            global::xls2json.Log.Error("未找到key列");
            return;
        }

        DataColumn keyCol = table.Columns[keyIndex];
        
        //对于key列的每个有效数据行
        for (int i = 4; i < table.Rows.Count; i++)
        {
            JsonNode node = new JsonObject();
            jsonObject[table.Rows[i][keyIndex].ToString()] = node;
            
            //进行逐列操作
            for (int j = 0; j < table.Columns.Count; j++)
            {
                var value = table.Rows[i][j].ToString();
                node[table.Rows[1][j].ToString()] = value;
            }
        }
        
        var jsonString = jsonObject.ToJsonString(options);
        var jsonPath = JsonPath + table.TableName + ".json";
        File.Create(jsonPath).Close();
        File.WriteAllText(jsonPath, jsonString);
        global::xls2json.Log.Succese($"已生成文件 {jsonPath}");
    }

    [Obsolete]
    private JsonNode GetFileHead(string filePath,string tableName)
    {
        var meta = new JsonObject();
        meta["Description"] = "This file is generated by xls2json, do not modify it manually.";
        meta["CopyRight"] = "Pditine";
        meta["Official Website"] = Website;
        meta["File"] = filePath;
        meta["Sheet"] = tableName;
        return meta;
    }
}